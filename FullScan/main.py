#!/usr/bin/python3

from sniffer.Sniffin_a_pcap import Pcap
import sys
import socket
from datetime import datetime
import timeit
from scanHost.ipScan import principal
from scanPort.threadingScan import main

def _sniffing(seg):
    # Creación de un socket con constructor default.
    try:
        sock = socket.socket(socket.AF_PACKET, socket.SOCK_RAW, socket.ntohs(3))
    except socket.error:
        print('El socket no se puedo crear, use privilegios de root o revise que la tarjeta de red esté en funcionamiento')
        sys.exit(1)

    tmstmp = datetime.today().strftime('%Y_%m_%d_%H_%M_%S')
    nameFile ='Salida'+ str(tmstmp) + '.pcap'
    # Generamos el objeto mypcap llamado la clase Pcap definida en línea 17
    mypcap = Pcap(nameFile)

    contador = 0

    while (contador <1000):

        # Escuchamos
        pkt=sock.recvfrom(65565)
        
        # escribimos
        mypcap.write(pkt[0])

        # flush, recargamos, actualizamos... la data en el archivo
        mypcap.pcap_file.flush()
        contador += 1
        print(contador/100,'%')

    # Cerramos el archivo
    mypcap.close()


##_sniffing(10)

#agregar funcion de validacion 
#principal('192.168.1.1/24')
main()
